{"version":3,"sources":["components/DataAll.js","components/YearsSelect.js","components/DataYears.js","components/CombinedDataYears.js","containers/ChartArea.js"],"names":["DataAll","_ref","titleYears","onClick","_useContext","useContext","DataContext","data","isLoading","isError","chartFunc","React","useEffect","all","react_default","a","createElement","Fragment","Typography","variant","align","CircularProgress","disableShrink","size","thickness","concat","Container","maxWidth","style","overflowX","id","width","height","Button","color","margin","disabled","YearsSelect","selectedYears","handleChangeYears","handleAllYears","FormControl","component","FormGroup","row","FormLabel","className","Object","keys","map","year","i","getYear","FormControlLabel","key","control","Checkbox","checked","onChange","value","label","DataYears","_useState","useState","_useState2","slicedToArray","setSelectedYears","objectSpread","reduce","acc","_ref2","date","defineProperty","years","entries","push","Number","filteredData","filter","day","includes","name","event","target","val","forEach","prev","Divider","light","CombinedDataYears","temps","filteredTemps","filteredPrecip","precip","ChartArea","type","combine","setAll","finalYear","Paper","textAlign","padding"],"mappings":"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","file":"static/js/4.70100945.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport {\r\n  Typography,\r\n  Container,\r\n  Button,\r\n  CircularProgress\r\n} from '@material-ui/core';\r\nimport { DataContext } from '../App';\r\n\r\nexport default function DataAll({ titleYears, onClick }) {\r\n  const { data, isLoading, isError, chartFunc } = useContext(DataContext);\r\n  React.useEffect(() => chartFunc.all(data));\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        {isLoading ? (\r\n          <CircularProgress\r\n            disableShrink\r\n            size={20}\r\n            thickness={3}\r\n            variant=\"indeterminate\"\r\n          />\r\n        ) : (\r\n          `${titleYears}`\r\n        )}\r\n        {isError ? 'ERROR' : null}\r\n      </Typography>\r\n      <Container maxWidth=\"xl\" style={{ overflowX: 'auto' }}>\r\n        <svg id=\"chart\" width=\"1500px\" height=\"550px\" />\r\n      </Container>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => onClick(false)}\r\n        style={{ margin: '5px' }}\r\n        disabled={isLoading}\r\n      >\r\n        Select years...\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Checkbox,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Button\r\n} from '@material-ui/core';\r\nimport getYear from '../helpers/getYear';\r\n\r\nexport default function YearsSelect({\r\n  selectedYears,\r\n  handleChangeYears,\r\n  handleAllYears\r\n}) {\r\n  return (\r\n    <>\r\n      <FormControl component=\"fieldset\">\r\n        <FormGroup row>\r\n          <FormLabel component=\"label\" className=\"MuiFormControlLabel-root\">\r\n            Select years:{' '}\r\n          </FormLabel>\r\n          {Object.keys(selectedYears).map(\r\n            (year, i) =>\r\n              +year !== 2009 &&\r\n              +year !== getYear() && (\r\n                <FormControlLabel\r\n                  key={'key' + year}\r\n                  control={\r\n                    <Checkbox\r\n                      checked={selectedYears[year]}\r\n                      onChange={handleChangeYears(year)}\r\n                      value={year}\r\n                    />\r\n                  }\r\n                  label={year}\r\n                />\r\n              )\r\n          )}\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            onClick={() => handleAllYears(true)}\r\n            style={{ margin: '0.5rem' }}\r\n          >\r\n            All\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            onClick={() => handleAllYears(false)}\r\n            style={{ margin: '0.5rem' }}\r\n          >\r\n            None\r\n          </Button>\r\n        </FormGroup>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Typography,\r\n  Container,\r\n  Button,\r\n  CircularProgress,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport YearsSelect from './YearsSelect';\r\nimport getYear from '../helpers/getYear';\r\nimport { DataContext } from '../App';\r\n\r\nexport default function DataYears({ onClick }) {\r\n  const { data, isLoading, isError, chartFunc } = useContext(DataContext);\r\n  const [selectedYears, setSelectedYears] = useState({});\r\n\r\n  useEffect(() => {\r\n    setSelectedYears(() => ({\r\n      ...data.reduce((acc, { date }) => {\r\n        const year = getYear(date);\r\n        if (+year !== 2009 && +year !== getYear()) {\r\n          acc = { ...acc, [year]: false };\r\n        }\r\n        return acc;\r\n      }, {})\r\n    }));\r\n  }, [data]);\r\n\r\n  const handleChangeYears = name => event => {\r\n    setSelectedYears({ ...selectedYears, [name]: event.target.checked });\r\n  };\r\n\r\n  const handleAllYears = val => {\r\n    Object.keys(selectedYears).forEach(key =>\r\n      setSelectedYears(prev => ({ ...prev, [key]: val }))\r\n    );\r\n  };\r\n\r\n  const years = Object.entries(selectedYears).reduce((acc, year) => {\r\n    if (year[1]) {\r\n      acc.push(Number(year[0]));\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  const filteredData = data.filter(day => years.includes(getYear(day.date)));\r\n\r\n  useEffect(() => chartFunc.years(data, filteredData, years));\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        {isLoading ? (\r\n          <CircularProgress\r\n            disableShrink\r\n            size={20}\r\n            thickness={3}\r\n            variant=\"indeterminate\"\r\n          />\r\n        ) : (\r\n          `selected years`\r\n        )}\r\n        {isError ? 'ERROR' : null}\r\n      </Typography>\r\n      <Container maxWidth=\"xl\" style={{ overflowX: 'auto' }}>\r\n        <svg id=\"chart\" width=\"1500px\" height=\"550px\" />\r\n      </Container>\r\n      <YearsSelect\r\n        selectedYears={selectedYears}\r\n        handleChangeYears={handleChangeYears}\r\n        handleAllYears={handleAllYears}\r\n      />\r\n      <Divider variant=\"middle\" light />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={() => onClick(true)}\r\n        style={{ margin: '0.5rem' }}\r\n      >\r\n        Back\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Typography,\r\n  Container,\r\n  Button,\r\n  CircularProgress,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport YearsSelect from './YearsSelect';\r\nimport getYear from '../helpers/getYear';\r\nimport { DataContext } from '../App';\r\n\r\nexport default function CombinedDataYears({ onClick }) {\r\n  const { data, isLoading, isError, chartFunc } = useContext(DataContext);\r\n  const [selectedYears, setSelectedYears] = useState({});\r\n\r\n  useEffect(() => {\r\n    setSelectedYears(() => ({\r\n      ...data.temps.reduce((acc, { date }) => {\r\n        const year = getYear(date);\r\n        if (+year !== 2009 && +year !== getYear()) {\r\n          acc = { ...acc, [year]: false };\r\n        }\r\n        return acc;\r\n      }, {})\r\n    }));\r\n  }, [data.temps]);\r\n\r\n  const handleChangeYears = name => event => {\r\n    setSelectedYears({ ...selectedYears, [name]: event.target.checked });\r\n  };\r\n\r\n  const handleAllYears = val => {\r\n    Object.keys(selectedYears).forEach(key =>\r\n      setSelectedYears(prev => ({ ...prev, [key]: val }))\r\n    );\r\n  };\r\n\r\n  const years = Object.entries(selectedYears).reduce((acc, year) => {\r\n    if (year[1]) {\r\n      acc.push(Number(year[0]));\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  const filteredTemps = data.temps.filter(day =>\r\n    years.includes(getYear(day.date))\r\n  );\r\n  const filteredPrecip = data.precip.filter(day =>\r\n    years.includes(getYear(day.date))\r\n  );\r\n\r\n  useEffect(() => chartFunc.years(data, filteredTemps, filteredPrecip, years));\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        {isLoading ? (\r\n          <CircularProgress\r\n            disableShrink\r\n            size={20}\r\n            thickness={3}\r\n            variant=\"indeterminate\"\r\n          />\r\n        ) : (\r\n          `selected years`\r\n        )}\r\n        {isError ? 'ERROR' : null}\r\n      </Typography>\r\n      <Container maxWidth=\"xl\" style={{ overflowX: 'auto' }}>\r\n        <svg id=\"chart\" width=\"1500px\" height=\"550px\" />\r\n      </Container>\r\n      <YearsSelect\r\n        selectedYears={selectedYears}\r\n        handleChangeYears={handleChangeYears}\r\n        handleAllYears={handleAllYears}\r\n      />\r\n      <Divider variant=\"middle\" light />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={() => onClick(true)}\r\n        style={{ margin: '0.5rem' }}\r\n      >\r\n        Back\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Paper, Typography } from '@material-ui/core';\r\nimport DataAll from '../components/DataAll';\r\nimport DataYears from '../components/DataYears';\r\nimport CombinedDataYears from '../components/CombinedDataYears';\r\nimport getYear from '../helpers/getYear';\r\n\r\nexport default function ChartArea({ type, combine }) {\r\n  const [all, setAll] = useState(true);\r\n\r\n  const finalYear = getYear();\r\n\r\n  return (\r\n    <Paper\r\n      style={{ textAlign: 'center', padding: '1rem', margin: '0.5rem auto' }}\r\n    >\r\n      <Typography variant=\"h5\" align=\"center\">\r\n        {type}\r\n      </Typography>\r\n      {all ? (\r\n        <>\r\n          <DataAll titleYears={`2009 - ${finalYear}`} onClick={setAll} />\r\n        </>\r\n      ) : combine ? (\r\n        <CombinedDataYears onClick={setAll} />\r\n      ) : (\r\n        <>\r\n          <DataYears onClick={setAll} />\r\n        </>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n"],"sourceRoot":""}